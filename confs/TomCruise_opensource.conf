general {
    base_exp_dir = ./exp/AAAI/TomCruise_123
    recording = [
        ./,
        ./models,
        ./nerf,
        ./scheduler
    ]
}

dataset {
    data_dir = ./data/zero_beta_tpose_render
}

train {
    learning_rate = 1e-3
    learning_rate_alpha = 0.05
    diffusion_learning_rate = 5e-4
    end_iter = 100000

    batch_size = 512
    validate_resolution_level = 1
    warm_up_end = 500
    anneal_end = 0
    use_white_bkgd = False

    save_freq = 1000
    val_freq = 100
    val_mesh_freq = 500
    report_freq = 100

    igr_weight = 0.1
    clip_mask_weight = 2.0
    diffusion_mask_weight = 2.0
    clip_weight = 1.0
    diffusion_weight = 0.0

    add_no_texture = False
    texture_cast_light = True
    use_face_prompt = True
    use_back_prompt = True
    use_silhouettes = True

    max_ray_num = 10000
}

diffusion {
    face_prompt = a headshot photo of Tom Cruise
    body_prompt = a full length photo of the bare body of Tom Cruise
    front_prompt = a full length photo of Tom Cruise
    skin_color = [0.79, 0.61, 0.6]
}

model {
    nerf {
        D = 4,
        d_in = 4,
        d_in_view = 3,
        W = 128,
        multires = 10,
        multires_view = 4,
        output_ch = 4,
        skips=[4],
        use_viewdirs=True
    }

    sdf_network {
        d_out = 129,
        d_in = 3,
        d_hidden = 128,
        n_layers = 3,
        skip_in = [3],
        multires = 6,
        bias = 0.5,
        scale = 1.0,
        geometric_init = True,
        weight_norm = True
    }

    variance_network {
        init_val = 0.7
    }

    rendering_network {
        d_feature = 128,
        mode = no_view_dir,
        d_in = 6,
        d_out = 3,
        d_hidden = 128,
        n_layers = 3,
        weight_norm = True,
        multires_view = 0,
        squeeze_out = True,
        extra_color = False
    }

    body_rendering_network {
        d_feature = 128,
        mode = no_view_dir,
        d_in = 6,
        d_out = 3,
        d_hidden = 128,
        n_layers = 2,
        weight_norm = True,
        multires_view = 0,
        squeeze_out = True,
        extra_color = False
    }

    neus_renderer {
        n_samples = 16,
        n_importance = 32,
        n_outside = 0,
        up_sample_steps = 4,     # 1 for simple coarse-to-fine sampling
        perturb = 1.0,
        extra_color = True
    }
}

